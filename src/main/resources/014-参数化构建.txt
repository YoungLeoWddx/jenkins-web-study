1，什么是参数化构建：(构建参数不可以出现破折号)
	在进行构建之前，可以输入参数，这个输入的参数可以作为ant或者maven的环境变量被使用起来。比如我们设置了一个VERSION的字符串参数，
	在maven中${env.VERSION}，可以使用这个参数。一般来说，使用参数化构建，需要手工触发构建过程。
	
	也可以在jenkins中执行mvn命令的时候，从外部传入这个变量。比如mvn test -Dversion=${VERSION}，这样，我们可以在maven的
	pom文件内使用version变量了。
	
	注意，参数化构建中如果设置了poll scm或者定时构建，那么会忽略参数设定的过程，只有手工触发构建，才需要设定参数。


传入的参数有各种不同的类型值，字符串啊，多行字符串，布尔啊，下拉选项参数啊，密码参数啊，这些都很简单，下面说说几个比较特殊的构建参数。

file构建参数，指定一个需要上传文件的location路径，相对路径是项目的workspace路径。可以上传一个文件到workspace，比如myfile/app.war。
这样进行参数化构建（手工触发）的时候，需要上传这个war文件到这个路径，然后才会进行构建。

credencials构建参数：可以在构建之前指定一个credencials凭证证书。（具体怎么用，不知道。。。）

run构建参数：这个是什么意思呢？
	run构建参数的本质是为本次构建生成一个环境变量，环境变量类似String参数，最后生成一个<jenkins_url>/job/<job_name>/<run_number>/格式的
	字符串。我们需要在project中填入在jenkins中已经存在的作业。默认是通过该project作业的最后一个构建版本作为run_number。
	最后生成了一个和这个构建的project相关的一个环境变量，我们通过这个环境变量可以访问该project中构建产出的资源。


list subversion tags构建参数：
	使用svn库中的tags列表来选择一个tag标签，作为此构建参数的值，在后面就可以使用这个环境变量值，来进行构建。比如在svn的地址配置中使用变量值，
	就可以指定不同的tag来进行构建了。
	
	当然了，我们在设置list svn tags参数的时候，url可以设置成根目录，这样，参数值还可以选中trunk等，这种构建是非常灵活的。一般情况下，我们都会
	在list svn tags参数设定的时候，把Repository参数值设置成svn仓库的根目录，这样选择的空间很大。
	
	例如，如果Name设置为SVN_TAG，并且Repository URL设置为https://svn.jenkins-ci.org/tags，那么Subversion的存储库URL必须设置为https://svn.jenkins-ci.org/tags/$ SVN_TAG。
	
	本质上来说，list subversion tags构建参数是一个String类型的构建参数。
	
git标签构建参数：
	参考jenkins权威指南286页。也可以安装git parameter plugin。和svn不同的是，由于git并不支持远程checkout,
	而是必须克隆一个完整的远程仓库到本地进行操作。如果进行参数化构建的时候，发现本地工作空间为空，那么会自动到远程仓库进行克隆。
	然后，我们选择对某一个分支或者tag进行手工构建。
	
	对于git构建参数而言，他只是一个分支或者tag参数，等价于一个String参数，因此，进行实际的构建的时候，首先应该指定一个shell任务，用来把本地工作空间checkout到指定的分支或者tag。
	
	由于svn和git机制的不同，在svn配置中通过嵌入变量值的方式来切换工作空间，比如https://svn.jenkins-ci.org/tags/$ SVN_TAG，
	而在git中，是通过一个shell命令，checkout来切换工作空间。
	
	
	
PS：可以在构建历史中的Parameters选项卡查看这些构建参数的参数值。

2，参数化触发：
	Parameterized Trigger plugin插件安装：
	jenkins权威指南290页很精彩。
	 被触发的构建作业一定是参数化作业，需要传递参数。而主动触发构建作业不一定是参数化作业。
