1,jenkins本质上来说是一个javaweb的应用程序，war包可以部署在windows下，也可以部署在linux下，这都没问题，但是jenkins应用程序
有一个主目录，存储了和jenkins工作相关的重要数据，存储的地方就是jenkins的主目录，主目录并不在webapp目录中。（而我们开发的普通的javaweb的应用程序，很多时候都是
用到了专用的数据库或者文件系统）。


2，jenkins的主目录是.jenkins目录。在linux中默认是家目录下的.jenkins目录，但是在windows 10，是C:\Windows\System32\config\systemprofile\.jenkins
由于这个.jenkins目录特别大，我们可以更改此目录的位置。设置环境变量JENKINS_HOME，然后将C:\Windows\System32\config\systemprofile\.jenkins中
的内容全部复制到新的家目录，启动jenkins即可。启动jenkins的时候，会寻找本机上的JENKINS_HOME目录。

3，最重要的目录就是jobs/../builds目录和workspace目录，所有和我们项目相关的内容都存在这两个目录中：
workspace和版本库同步，他也包含了最新的版本库代码（svn是update，git是fetch），以及当前
与之对应的最新的构建产物。workspace是jenkins对项目进行构建的地方，它包含了经过更新同步之后scm的最新的源代码，和构建生成的所有产物。这个工作空间会被每一个连续的构建过程重复使用，每次一个新的构建操作都会清空
该workspace上一次构建的产物并执行同步scm操作（原则上来说，每一次构建都不要修改上一次update来的源代码，否则容易出错），从这个意义上来说，如果构建产物没有及时保存，那么，就会丢失构建产物啦。
workspace对应了我们构建任务的工作空间，他不会随着构建次数的增多而线性变大，几乎是稳定的大小。

builds中存放了构建作业的完整配置信息，config.xml，所有历史构建信息，比如历史构建任务号，使用的scm源代码版本，构建日志，以及一
些插件的统计追踪报告信息，比如覆盖率连续统计数据等。我们在jenkins页面删除某一次构建，实际上就是删除了某一次build目录中的所有内容。
由于workspace中生成的产物会在下一次构建的时候被清除，因此，我们有时需要在builds历史目录中存放一些构建产物（archive和javadoc等），
在jenkins的maven构建作业中，默认会存放二进制构建产物。
builds目录会随着构建次数的增加而变大，因为有历史堆积。所以权衡那些文件需要保留在builds目录中需要设计好。我们可以在设置job的时候，discard old builds，
丢弃旧的构建。（但是jenkins永远不会删除最后一个稳定和成功的构建）
由于builds目录很重要，会记录所有的构建历史和构建度量追踪，因此不要随意删除某些构建历史。



4，.jenkins目录存放了所有和jenkins相关的配置，项目，构建信息，因此升级jenkins是非常容易，只需要替换掉jenkins.war就可以完成升级。但是
要注意，替换后要清空tomcat的work目录。

